name: Build Dante on Multiple Linux Distros

on:
  push:
    paths:
      - 'dante/**'
      - '.github/workflows/build-multi-platform.yml'
  pull_request:
    paths:
      - 'dante/**'
      - '.github/workflows/build-multi-platform.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: ubuntu
            image: ubuntu:22.04
            install: apt-get update && apt-get install -y build-essential gcc make autoconf automake perl m4
          - name: debian
            image: debian:stable
            install: apt-get update && apt-get install -y build-essential gcc make autoconf automake perl m4
          - name: alpine
            image: alpine:latest
            install: |
              set -ex
              apk add --no-cache build-base gcc make autoconf automake perl m4
              echo "http://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories
              apk add --update automake1.16
              ln -sf /usr/bin/aclocal-1.16 /usr/bin/aclocal

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Build in Docker
        run: |
          docker run --rm -v ${{ github.workspace }}/dante:/src -w /src ${{ matrix.image }} /bin/sh -c "
            set -ex
            ${{ matrix.install }}
            if [ -f ./configure ]; then chmod +x ./configure; ./configure; fi
            make
            mkdir -p /src/build-out/${{ matrix.name }}
            cp danted /src/build-out/${{ matrix.name }}/ || true
            cp dante  /src/build-out/${{ matrix.name }}/ || true
          "

      - name: Upload dante binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: dante-bin-${{ matrix.name }}
          path: dante/build-out/${{ matrix.name }}/
